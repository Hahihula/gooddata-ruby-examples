=== Adding user to organization from domain
by Tomas Svarovsky

==== Problem
You would like to add a users to project programmatically. You already have all the user profiles created in domain (organization). You potentially have many projects that you would like to populate.

==== Prerequisites
You have to have a user who is an admin of an organization. If you do not have that please consult (xy) to get one.
You have a domain populated with user. If you do not have a look at recipe (z)

We assume that you have a file with details which users should be added to a project. The file has to contain three pieces of information. Who you would like to add to a project, role that the user should take on in that project and which project he should be added to. In the first example we will assume all the users should be added to a single project so we will have only 2 columns.

    login,role
    john@example.com,admin

The headers we used are defaults. If you have different ones you will have to do some mangling. Example of how to do that can be found in recipe adding_users_to_domain.

==== Solution

First let's have a look how to implement an addition with having the file as in the example above.

[source,ruby]
----
# encoding: utf-8

require 'gooddata'

GoodData.with_connection('user', 'password') do |client|

  domain = client.domain('domain-name')
  users = []
  CSV.foreach('data.csv', :headers => true, :return_headers => false) do |row|
    data = row.to_hash
    users << row.to_hash.symbolize_keys.slice(:login, :role)
  end

  project.create_users(users, domain: domain, whitelists: ['svarovsky@goodata.com'])
end
----


The main workhorse here is the method `project.create_users`. What it takes is the list of users along with the roles. It also has to know which domain it is supposed to take these users from. 

The last parameter is `whitelists` and that deserves a deeper explanation. Adding users to a project is declarative not additive. What this means is the list of the users that you past into this method is a declaration how you would like the project to look. The SDK will do everything in its power to try to match the project with this declaration. What it means in practice is that it removes users from the project if they are not stated in the list you provided. For most cases this is exactly what you want but sometimes there are additional service users that you do not want to touch and that do not come from the data (like ETL admins, support users etc). You can specify such exceptions in the `whitelists` param and they will be taken out of the process. The parameter takes both regular expressions and strings.

