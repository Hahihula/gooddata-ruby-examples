=== Substitute Date Dimension for Another One
by Tomas Korcak

==== Problem
You want to substitute an existing date dimension in your project for another date dimension. This is particularly handy when you are consolidating date dimensions (perhaps you want to have only one date dimension in your project) or replacing your standard date dimension with a fiscal date dimension. 

==== Solution

The code snippet below substitutes all occurences of a date dimension objects (attributes and labels) for another date dimension's objects (that must obviously exist in the project). The substitution is performed in following objects:

- Metrics
- Report Definitions
- Reports
- Report Specific Metrics
- Dashboards
- Mandatory User Filters aka Data Permissions

[source,ruby]
----
# encoding: utf-8

require 'gooddata'

GoodData.with_connection do |c|
  GoodData.with_project('project_pid') do |project|

    opts = {
      # You can specify name of new and old date dimension...
      # :old => 'Close',
      # :new => 'Completed',

      # Or explicitly specify mapping using identifiers...
      :mapping => {
        'closedate.date' => 'abortdate.date',
        'closedate.day.in.euweek' => 'abortdate.day.in.week',
        'closedate.month' => 'abortdate.month',
        'closedate.month.in.year' => 'abortdate.month.in.year',
        'closedate.euweek.in.year' => 'abortdate.week.in.year',
        'closedate.euweek' => 'abortdate.week',
        'closedate.quarter' => 'abortdate.quarter',
        'closedate.day.in.month' => 'abortdate.day.in.month',
        'closedate.week.in.quarter' => 'abortdate.week.in.quarter',
        'closedate.quarter.in.year' => 'abortdate.quarter.in.year',
        'closedate.week' => 'abortdate.week',
        'closedate.day.in.year' => 'abortdate.day.in.year',
        'closedate.day.in.week' => 'abortdate.day.in.week',
        'closedate.week.in.year' => 'abortdate.week.in.year',
        'closedate.euweek.in.quarter' => 'abortdate.week.in.quarter',
        'closedate.day.in.quarter' => 'abortdate.day.in.quarter',
        'closedate.year' => 'closedate.year',
        'closedate.month.in.quarter' => 'abortdate.month.in.quarter'
      },

      :dry_run = false # Optional. Default 'false'
    }

    project.replace_date_dimension(opts)
  end
end
----

==== Discussion

You need to specify complete mapping between the current and new date dimensions attributes. This is straightforward in case when both date dimensions have the same structure (see the commented out _:old_ / _:new_ syntax). Full mapping is necessary when the date dimensions have different structures. For example the _abortdate_ date dimension in the code above doesn't have any _EU week_ attributes. The existing _closedate_'s _EU week_ attributes are mapped to standard week attributes of the _abortdate_ dimension. 
